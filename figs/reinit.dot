strict digraph {
	rankdir=LR;
	ranksep=0;
	node [label=""];

	start [shape=none];
	renew [shape=none];

	{
		rank=same;
		edge [style=invisible, arrowhead=none];

		start -> renew;
	}

	ctor [label=<<i>libgotcha</i> constructor>];
	copy [label="module initializer"];
	rtld [label="dynamic linker/loader"];
	back [label="backup store"];
	mcpy [label="memcpy()", fontname=monospace];

	start -> ctor [label="at program start"];
	ctor -> copy [style=dashed, label=<<b>for each</b> libset and module>];
	copy -> rtld [label="1. load a copy of the module"];
	copy -> back [style=dashed, label=<2. <b>for each</b> writeable address range>];
	back -> mcpy [label="capture in-memory snapshot"];

	reinit [label="libset_reinit()", fontname=monospace];
	restore [label="static data restorer"];
	back2 [label="backup store"];
	water [label="libset version watermark"]
	mcpy2 [label="memcpy()", fontname=monospace];

	renew -> reinit [label="control library call"];
	reinit -> restore [style=dashed, label=<<b>for each</b> module>];
	restore -> back2 [style=dashed, label=<1. <b>for each</b> writeable address range>];
	restore -> water [label="2. increment latest version[libset]"];
	back2 -> mcpy2 [label="restore globals from snapshot"];
}
